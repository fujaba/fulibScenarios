# --------------- Compiler Info ---------------

markers.1.error=1 error generated.
markers.n.errors=%d errors generated.
markers.1.warning=1 warning generated.
markers.n.warnings=%d warnings generated.
markers.1.warning.1.error=1 warning and 1 error generated.
markers.n.warnings.1.error=%1$d warnings and 1 error generated.
markers.1.warning.n.errors=1 warning and %2$d errors generated.
markers.n.warnings.n.errors=%1$d warnings and %2$d errors generated.

# --------------- Declarations ---------------

class.kind=class
attribute.kind=attribute
association.kind=association
method.kind=method
parameter.kind=parameter
var.kind=variable

attribute.desc.1=attribute of one '%s'
attribute.desc.*=attribute of many '%s'

association.desc.1=association to one '%s'
association.desc.*=association to many '%s'

# TODO unused in the Scenario Language - classes never shadow other members (see TODO in DeclResolver.resolveClass)
class.name.shadow.other.decl=class name '%s' shadows the %s with the same name

property.declaration.first='%s.%s' was first declared here
property.redeclaration.conflict=conflicting redeclaration of '%s.%s'
conflict.old=was: %s
conflict.new=now: %s
property.unresolved=unresolved attribute or association '%s.%s'
property.unresolved.primitive=cannot resolve attribute or association '%s' of primitive type '%s'
property.typo=perhaps you meant to access '%s' instead of '%s'?

attribute.reverse.name=cannot define reverse association name '%s' for attribute '%s.%s'
attribute.unresolved.external=cannot resolve attribute '%s' in external class '%s'
# TODO unused in the Scenario Language - classes are never frozen
attribute.unresolved.frozen=cannot resolve attribute '%s' in frozen class '%s'

association.reverse.conflict=conflicting redeclaration of reverse association of '%s.%s'
association.reverse.late=cannot define reverse association name '%s' for unidirectional association '%s.%s' after the first declaration
association.self.cardinality.mismatch=mismatching cardinalities of self-association '%s.%s'
association.unresolved.external=cannot resolve association '%s' in external class '%s'
# TODO unused in the Scenario Language - classes are never frozen
association.unresolved.frozen=cannot resolve association '%s' in frozen class '%s'

method.unresolved.external=cannot resolve method '%s' in external class '%s'
# TODO unused in the Scenario Language - classes are never frozen
method.unresolved.frozen=cannot resolve method '%s' in frozen class '%s'

variable.declaration.first='%s' was first declared here
variable.redeclaration=invalid redeclaration of '%s'
variable.redeclaration.hint=perhaps this name was inferred from the first attribute and you need to give this object an explicit name?

# --------------- Sentences ---------------

answer.we=cannot answer from the test method indicated by actor 'we'
answer.we.hint=perhaps you meant to write '%s answers ...' instead of 'we answer ...'?

frame.incompatible.actor=unknown actor '%s'
frame.incompatible.actor.hint=perhaps you did not call the method or the call was already closed?

descriptor.indefinite.deprecated=the 'a <type> <name>' syntax is deprecated
descriptor.indefinite.deprecated.hint=write 'the %s %s' instead
descriptor.multi.indefinite.deprecated=the '<type>s <names>' syntax is deprecated

has.subject.primitive=cannot set attributes for object of primitive type '%s'
create.subject.primitive.attributes=cannot instantiate primitive type '%s' with attributes
has.placeholder.concrete=cannot combine has sentence with 'Every' with a concrete value assignment
has.placeholder.concrete.hint=to make this an example, write 'has a/an %s like %s' instead
write.target.invalid=cannot write into %s
write.target.list=cannot write into %s - only single-valued attributes and associations are allowed
assign.type=cannot assign expression of type '%s' to variable '%s' of type '%s'
add.target.not.name=cannot add to '%s' - must be a name or attribute access
add.source.type=cannot add expression of type '%s' to '%s'
add.target.type=cannot add to expression of type '%s'
remove.source.type=cannot remove expression of type '%s' from '%s'
remove.target.not.name=cannot remove from '%s' - must be a name or attribute access
remove.target.type=cannot remove from expression of type '%s'
take.syntax.deprecated=the 'take <name> <expr> from ...' syntax is deprecated
take.syntax.deprecated.hint=write 'take a %s like %s from ...' instead
take.source.type=cannot iterate over expression of type '%s'

# --------------- Constraints ---------------

match.no.roots=match has no root objects - no objects are in scope or declared with 'on ...'

pattern.object.duplicate=duplicate pattern object name '%s'
pattern.object.first='%s' was first declared here

attribute-constraint.conditional.not-contains=conditional operator 'do/does not contain' cannot be used here
link-constraint.target.unresolved=unresolved link target '%s'
link-constraint.target.not.pattern-object=link target '%s' is not a pattern object

# --------------- Expressions ---------------

stringliteral.typo=perhaps you meant to refer to '%s' instead of the string literal '%s'?

list.type=elements of list expression have common type '%s'

call.mismatch.params.args=arguments do not match parameters of method '%s.%s'
call.parameters=parameters: %s
call.arguments=arguments: %s
call.mismatch.type=cannot assign argument of type '%s' to parameter '%s' of type '%s'
call.return.type=cannot return expression of type '%s' from method '%s' with return type '%s'
call.receiver.primitive=cannot call method '%s' on receiver of primitive type '%s'
answer.unresolved=answer literal cannot be used without a preceding call with a result
# TODO currently not possible to invoke this in the scenario language
conditional.type=expression of type '%s' cannot be converted to boolean
conditional.lhs.missing=conditional operator requires a left-hand expression
attribute-check.receiver.missing=attribute check expression requires a receiver
predicate.lhs.missing=predicate operator requires a left-hand expression

range.element.type.unsupported=cannot range over expression of non-integer type '%s'
range.element.type.mismatch=cannot range over bounds of different types
range.element.type.lower=lower bound has type '%s'
range.element.type.upper=upper bound has type '%s'
